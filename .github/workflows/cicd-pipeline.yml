name: Flask CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
  release:
    types:
      - created

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

  run_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -v

  build:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build application
        run: |
          echo "Build step: Preparing app for deployment"

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to staging environment
        env:
          DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
        run: |
          echo "Deploying to staging environment..."
          ssh -o StrictHostKeyChecking=no -i $DEPLOYMENT_KEY user@staging-server "cd /path/to/staging/directory && git pull && sudo systemctl restart flask-app"

  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to production environment
        env:
          DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
        run: |
          echo "Deploying to production environment..."
          ssh -o StrictHostKeyChecking=no -i $DEPLOYMENT_KEY user@production-server "cd /path/to/production/directory && git pull && sudo systemctl restart flask-app"
