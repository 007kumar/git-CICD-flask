name: Python CI/CD Pipeline

on:
  push:
    branches:
      - staging    # Trigger on changes pushed to the staging branch
    tags:
      - 'v*'       # Trigger on version tags for production deployment
  pull_request:
    branches:
      - staging    # Trigger on pull requests targeting the staging branch

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install dependencies from requirements.txt

  run_tests:
    runs-on: ubuntu-latest
    needs: install_dependencies  # Ensure this job runs after dependencies are installed
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q  # Run tests with pytest

  build:
    runs-on: ubuntu-latest
    needs: run_tests  # Ensure this job runs after tests pass

    if: success()  # Only proceed if tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build application
        run: |
          # Add any build commands here, like packaging the application, building docker images, etc.
          echo "Build process goes here"  # Placeholder for the build step

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after build
    if: github.ref == 'refs/heads/staging'  # Only trigger for staging branch
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment..."
          # Replace this with actual deployment commands, such as:
          # - SSH into a server and pull the latest changes
          # - Use Kubernetes (kubectl apply -f staging-deployment.yaml)
          # - Docker (docker-compose up -d)
          # For example:
          # ssh user@staging-server "docker pull my-image:latest && docker-compose up -d"
          
  deploy_production:
    runs-on: ubuntu-latest
    needs: build  # Ensure this job runs after build
    if: startsWith(github.ref, 'refs/tags/v')  # Only trigger for version tags
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Deploy to Production
        run: |
          echo "Deploying to production environment..."
          # Replace this with actual production deployment commands, such as:
          # - SSH into production server
          # - Use Kubernetes (kubectl apply -f production-deployment.yaml)
          # - Docker (docker-compose up -d)
          # For example:
          # ssh user@production-server "docker pull my-image:latest && docker-compose up -d"
